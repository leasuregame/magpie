#ifndef __cocos2dx_studio_h__
#define __cocos2dx_studio_h__

#include "jsapi.h"
#include "jsfriendapi.h"


extern JSClass  *jsb_CCBaseData_class;
extern JSObject *jsb_CCBaseData_prototype;

JSBool js_cocos2dx_studio_CCBaseData_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCBaseData_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCBaseData(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCBaseData_getColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBaseData_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBaseData_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBaseData_CCBaseData(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCTween_class;
extern JSObject *jsb_CCTween_prototype;

JSBool js_cocos2dx_studio_CCTween_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCTween_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCTween(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCTween_play(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_gotoAndPause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_getAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_gotoAndPlay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_setAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCTween_CCTween(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCColliderFilter_class;
extern JSObject *jsb_CCColliderFilter_prototype;

JSBool js_cocos2dx_studio_CCColliderFilter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCColliderFilter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCColliderFilter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCColliderFilter_setCollisionType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCColliderFilter_setGroup(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCColliderFilter_getCollisionType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCColliderFilter_getGroup(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCDisplayManager_class;
extern JSObject *jsb_CCDisplayManager_prototype;

JSBool js_cocos2dx_studio_CCDisplayManager_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCDisplayManager_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCDisplayManager(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCDisplayManager_getDisplayRenderNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getAnchorPointInPoints(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getDisplayRenderNodeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_removeDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_setForceChangeDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getBoundingBox(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_addDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_containPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getCurrentDisplayIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_setVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getDecorativeDisplayList(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_changeDisplayByIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_isVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_getForceChangeDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCDisplayManager_CCDisplayManager(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCBone_class;
extern JSObject *jsb_CCBone_prototype;

JSBool js_cocos2dx_studio_CCBone_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCBone_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCBone(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCBone_nodeToWorldTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_isTransformDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_updateZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setTransformDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getDisplayRenderNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_addChildBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getWorldInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getTween(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getParentBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getBlendType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_updateColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getDisplayRenderNodeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_removeDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_updateDisplayedOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setParentBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getIgnoreMovementBoneData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getColliderFilter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setIgnoreMovementBoneData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_removeFromParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getChildArmature(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setDisplayManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setColliderFilter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getColliderBodyList(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setArmature(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_addDisplay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_removeChildBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setChildArmature(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getDisplayManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_getArmature(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_setBlendType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_changeDisplayByIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_nodeToArmatureTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_updateDisplayedColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBone_CCBone(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCBatchNode_class;
extern JSObject *jsb_CCBatchNode_prototype;

JSBool js_cocos2dx_studio_CCBatchNode_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCBatchNode_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCBatchNode(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCBatchNode_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBatchNode_getTexureAtlasWithTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBatchNode_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCBatchNode_create(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCArmatureAnimation_class;
extern JSObject *jsb_CCArmatureAnimation_prototype;

JSBool js_cocos2dx_studio_CCArmatureAnimation_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCArmatureAnimation_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCArmatureAnimation(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getSpeedScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getAnimationScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_play(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_pause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_setAnimationScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_gotoAndPause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_resume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_stop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_setSpeedScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getAnimationData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_playByIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_gotoAndPlay(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getMovementCount(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_getCurrentMovementID(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_setAnimationData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_setAnimationInternal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureAnimation_CCArmatureAnimation(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCArmature_class;
extern JSObject *jsb_CCArmature_prototype;

JSBool js_cocos2dx_studio_CCArmature_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCArmature_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCArmature(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCArmature_getBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_changeBoneParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getTexureAtlasWithTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getBoneAtPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getBatchNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setVersion(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_updateOffsetPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setColliderFilter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_removeBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getArmatureTransformDirty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setParentBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setBatchNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_draw(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_nodeToParentTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setArmatureData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_setTextureAtlas(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_addBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getArmatureData(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getParentBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_boundingBox(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getVersion(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getAnimation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getBoneDic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_getTextureAtlas(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmature_CCArmature(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCSkin_class;
extern JSObject *jsb_CCSkin_prototype;

JSBool js_cocos2dx_studio_CCSkin_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCSkin_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCSkin(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCSkin_getBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_nodeToWorldTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_initWithFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_nodeToWorldTransformAR(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_updateTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_getDisplayName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_updateArmatureTransform(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_initWithSpriteFrameName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_setBone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_createWithSpriteFrameName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCSkin_CCSkin(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCArmatureDataManager_class;
extern JSObject *jsb_CCArmatureDataManager_prototype;

JSBool js_cocos2dx_studio_CCArmatureDataManager_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCArmatureDataManager_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCArmatureDataManager(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCArmatureDataManager_addArmatureFileInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_removeArmatureFileInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_isAutoLoadSpriteFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_addSpriteFrameFromFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_purge(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCArmatureDataManager_sharedArmatureDataManager(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCComAttribute_class;
extern JSObject *jsb_CCComAttribute_prototype;

JSBool js_cocos2dx_studio_CCComAttribute_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCComAttribute_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCComAttribute(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCComAttribute_getFloat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_setFloat(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_setCString(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_getCString(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_getBool(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_setInt(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_getInt(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_setBool(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAttribute_create(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCComAudio_class;
extern JSObject *jsb_CCComAudio_prototype;

JSBool js_cocos2dx_studio_CCComAudio_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCComAudio_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCComAudio(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCComAudio_stopAllEffects(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_getEffectsVolume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_stopEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_getBackgroundMusicVolume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_willPlayBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setBackgroundMusicVolume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_end(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_isEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_stopBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_pauseBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_isBackgroundMusicPlaying(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_isLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_pauseAllEffects(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_preloadBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_playBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_playEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_resumeAllEffects(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_unloadEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_rewindBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_preloadEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_pauseEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_resumeBackgroundMusic(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_setEffectsVolume(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_getFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_resumeEffect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComAudio_create(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCInputDelegate_class;
extern JSObject *jsb_CCInputDelegate_prototype;

JSBool js_cocos2dx_studio_CCInputDelegate_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCInputDelegate_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCInputDelegate(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCInputDelegate_isAccelerometerEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setKeypadEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_getTouchMode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setAccelerometerEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_isKeypadEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_isTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setTouchPriority(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_getTouchPriority(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCInputDelegate_setTouchMode(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCComController_class;
extern JSObject *jsb_CCComController_prototype;

JSBool js_cocos2dx_studio_CCComController_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCComController_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCComController(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCComController_setEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_isEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComController_CCComController(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_CCComRender_class;
extern JSObject *jsb_CCComRender_prototype;

JSBool js_cocos2dx_studio_CCComRender_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_CCComRender_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_CCComRender(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_CCComRender_setNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComRender_getNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_CCComRender_create(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILayoutParameter_class;
extern JSObject *jsb_UILayoutParameter_prototype;

JSBool js_cocos2dx_studio_UILayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UILayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UILayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UILayoutParameter_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayoutParameter_UILayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILinearLayoutParameter_class;
extern JSObject *jsb_UILinearLayoutParameter_prototype;

JSBool js_cocos2dx_studio_UILinearLayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UILinearLayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UILinearLayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UILinearLayoutParameter_setGravity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILinearLayoutParameter_getGravity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILinearLayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILinearLayoutParameter_UILinearLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIRelativeLayoutParameter_class;
extern JSObject *jsb_UIRelativeLayoutParameter_prototype;

JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIRelativeLayoutParameter_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIRelativeLayoutParameter(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_setAlign(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_setRelativeToWidgetName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_getRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_getRelativeToWidgetName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_setRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_getAlign(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRelativeLayoutParameter_UIRelativeLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIWidget_class;
extern JSObject *jsb_UIWidget_prototype;

JSBool js_cocos2dx_studio_UIWidget_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIWidget_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIWidget(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIWidget_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setCascadeOpacityEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRelativeLeftPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getPositionType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getChildByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_didNotSelectSelf(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setFocused(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getWidgetParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getContainerNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getWidgetZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isBright(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRelativeRightPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_addRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getSizeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getPositionPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getValidNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_convertToWorldSpace(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setWidgetParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_removeAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRotationX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRotationY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getSizePercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setPositionType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isCascadeOpacityEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getWidgetTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setTouchEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setLayoutParameter(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_addCCNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_clippingParentAreaContainPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_removeFromParentAndCleanup(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_active(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_removeRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_stopActionByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_reorderChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isActive(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setWidgetTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isFocused(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setTouchEnable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getLeftInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setPositionPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRotation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getBottomInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_runAction(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_stopAllActions(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getActionByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setRotationX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setRotationY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setBrightStyle(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setUpdateEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setRotation(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_hitTest(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setWidgetZOrder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setSizePercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getTouchEndPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getChildByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isIgnoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isUpdateEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_updateSizeAndPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getWidgetType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setCascadeColorEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRelativeBottomPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_removeAllChildrenAndCleanUp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getTouchMovePos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_removeFromParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getWorldPosition(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_clone(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_isCascadeColorEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_disable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_checkChildInfo(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getTopInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRightInParent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getRelativeTopPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getTouchStartPos(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setSizeType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_stopAction(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_setBright(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_getActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIWidget_UIWidget(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILayout_class;
extern JSObject *jsb_UILayout_prototype;

JSBool js_cocos2dx_studio_UILayout_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UILayout_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UILayout(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UILayout_setBackGroundColorVector(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setBackGroundColorType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_removeBackGroundImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setBackGroundImage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setBackGroundColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_isClippingEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_doLayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setClippingEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setClippingEnable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setBackGroundColorOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setBackGroundImageCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setBackGroundImageScale9Enable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_getBackGroundImageTextureSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_hitTest(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setBackGroundImageScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayout_UILayout(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIRootWidget_class;
extern JSObject *jsb_UIRootWidget_prototype;

JSBool js_cocos2dx_studio_UIRootWidget_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIRootWidget_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIRootWidget(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIRootWidget_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRootWidget_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIRootWidget_UIRootWidget(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIButton_class;
extern JSObject *jsb_UIButton_prototype;

JSBool js_cocos2dx_studio_UIButton_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIButton_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIButton(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIButton_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setNormalTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_getTitleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setTitleFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setTitleColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setCapInsetsDisabledRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_loadTextureDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setTextColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setTitleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setCapInsetsNormalRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_loadTexturePressed(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_loadTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setScale9Size(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_getTitleColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_loadTextureNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setPressedTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setCapInsetsPressedRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_getTitleFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_getTitleFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setScale9Enable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setDisabledTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_setPressedActionEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIButton_UIButton(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UICheckBox_class;
extern JSObject *jsb_UICheckBox_prototype;

JSBool js_cocos2dx_studio_UICheckBox_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UICheckBox_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UICheckBox(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UICheckBox_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setBackGroundDisabledTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_loadTextureBackGroundDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setBackGroundSelectedTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_loadTextureFrontCross(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_loadTextureBackGround(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setSelectedState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setFrontCrossDisabledTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_getSelectedState(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_loadTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_loadTextureFrontCrossDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_loadTextureBackGroundSelected(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setFrontCrossTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_setBackGroundTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UICheckBox_UICheckBox(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIImageView_class;
extern JSObject *jsb_UIImageView_prototype;

JSBool js_cocos2dx_studio_UIImageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIImageView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIImageView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIImageView_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_checkDoubleClick(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setTextureRect(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_loadTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setScale9Size(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setDoubleClickEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setScale9Enable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIImageView_UIImageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILabel_class;
extern JSObject *jsb_UILabel_prototype;

JSBool js_cocos2dx_studio_UILabel_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UILabel_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UILabel(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UILabel_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setScale(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setTextVerticalAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setTouchScaleChangeEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_isFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_isFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_isTouchScaleChangeEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setTextAreaSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_getStringLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setScaleY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setScaleX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setFlipY(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setFlipX(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setTouchScaleChangeAble(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_getTouchScaleChangeAble(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_setTextHorizontalAlignment(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabel_UILabel(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILabelAtlas_class;
extern JSObject *jsb_UILabelAtlas_prototype;

JSBool js_cocos2dx_studio_UILabelAtlas_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UILabelAtlas_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UILabelAtlas(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UILabelAtlas_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelAtlas_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelAtlas_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelAtlas_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelAtlas_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelAtlas_setProperty(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelAtlas_setStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelAtlas_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelAtlas_UILabelAtlas(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILoadingBar_class;
extern JSObject *jsb_UILoadingBar_prototype;

JSBool js_cocos2dx_studio_UILoadingBar_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UILoadingBar_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UILoadingBar(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UILoadingBar_setPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_setTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_loadTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_setScale9Size(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_setScale9Enable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_getDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_getPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILoadingBar_UILoadingBar(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIScrollView_class;
extern JSObject *jsb_UIScrollView_prototype;

JSBool js_cocos2dx_studio_UIScrollView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIScrollView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIScrollView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIScrollView_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToTop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToPercentHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_removeAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToPercentBothDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_getChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_getDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToBottomLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_getInnerContainer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToBottom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToTopLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToTopRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToBottomLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_setInnerContainerSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_isInertiaScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_getInnerContainerSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_isBounceEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToPercentVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_doLayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_setInertiaScrollEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToTopLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToPercentHorizontal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToBottomRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_setBounceEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToTop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToPercentBothDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToPercentVertical(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToBottom(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToBottomRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToLeft(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_jumpToRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_scrollToTopRight(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIScrollView_UIScrollView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UISlider_class;
extern JSObject *jsb_UISlider_prototype;

JSBool js_cocos2dx_studio_UISlider_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UISlider_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UISlider(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UISlider_setPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_loadSlidBallTextureNormal(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_loadProgressBarTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setScale9Enabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setBarTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_ignoreContentAdaptWithSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_loadSlidBallTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setSlidBallDisabledTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setSlidBallTextures(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setSlidBallNormalTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_loadBarTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setSlidBallPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_loadSlidBallTexturePressed(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setSlidBallPressedTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setScale9Size(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setCapInsetProgressBarRebderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setCapInsetsBarRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setScale9Enable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setCapInsets(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_setProgressBarTexture(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_loadSlidBallTextureDisabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_getPercent(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UISlider_UISlider(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UITextField_class;
extern JSObject *jsb_UITextField_prototype;

JSBool js_cocos2dx_studio_UITextField_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UITextField_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UITextField(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UITextField_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setAttachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getDeleteBackward(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getAttachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setFontName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getInsertText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_initRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getDetachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setOpacity(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_didNotSelectSelf(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_isPasswordEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_attachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setMaxLengthEnable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setPasswordEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setPasswordEnable(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setMaxLengthEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setPasswordStyleText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setFontSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setPlaceHolder(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setColor(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_getMaxLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_isMaxLengthEnabled(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setDetachWithIME(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setInsertText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setMaxLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setTouchSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_setDeleteBackward(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UITextField_UITextField(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIListView_class;
extern JSObject *jsb_UIListView_prototype;

JSBool js_cocos2dx_studio_UIListView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIListView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIListView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIListView_addChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_initChildWithDataLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_getDataLength(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_getUpdateChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_setDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_setUpdateSuccess(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_removeAllChildren(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_removeChild(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_getDirection(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_getUpdateSuccess(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_doLayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_getUpdateDataIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIListView_UIListView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILabelBMFont_class;
extern JSObject *jsb_UILabelBMFont_prototype;

JSBool js_cocos2dx_studio_UILabelBMFont_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UILabelBMFont_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UILabelBMFont(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UILabelBMFont_setAnchorPoint(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelBMFont_getVirtualRenderer(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelBMFont_getStringValue(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelBMFont_setText(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelBMFont_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelBMFont_getContentSize(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelBMFont_setFntFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelBMFont_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILabelBMFont_UILabelBMFont(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIPageView_class;
extern JSObject *jsb_UIPageView_prototype;

JSBool js_cocos2dx_studio_UIPageView_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIPageView_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIPageView(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIPageView_getLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_getCurPageIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_addWidgetToPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_getPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_removePage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_getDescription(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_insertPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_setLayoutType(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_scrollToPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_update(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_doLayout(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_removePageAtIndex(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_getPages(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_removeAllPages(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_addPage(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIPageView_UIPageView(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UIHelper_class;
extern JSObject *jsb_UIHelper_prototype;

JSBool js_cocos2dx_studio_UIHelper_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UIHelper_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UIHelper(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UIHelper_seekActionWidgetByActionTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIHelper_seekWidgetByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIHelper_seekWidgetByRelativeName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UIHelper_seekWidgetByName(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_GUIReader_class;
extern JSObject *jsb_GUIReader_prototype;

JSBool js_cocos2dx_studio_GUIReader_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_GUIReader_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_GUIReader(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_GUIReader_widgetFromJsonFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_GUIReader_purgeGUIReader(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_GUIReader_shareReader(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_UILayer_class;
extern JSObject *jsb_UILayer_prototype;

JSBool js_cocos2dx_studio_UILayer_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_UILayer_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_UILayer(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_UILayer_removeWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_clear(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_setVisible(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_getWidgetByTag(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_dispose(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_getRootWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_init(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_removeWidgetAndCleanUp(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_getWidgetByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_addWidget(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_create(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_UILayer_UILayer(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_SceneReader_class;
extern JSObject *jsb_SceneReader_prototype;

JSBool js_cocos2dx_studio_SceneReader_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_SceneReader_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_SceneReader(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_SceneReader_purgeSceneReader(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_SceneReader_createNodeWithSceneFile(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_SceneReader_sceneReaderVersion(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_SceneReader_sharedSceneReader(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_ActionObject_class;
extern JSObject *jsb_ActionObject_prototype;

JSBool js_cocos2dx_studio_ActionObject_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_ActionObject_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_ActionObject(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_ActionObject_setCurrentTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_pause(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_setName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_setUnitTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_stop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_play(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getCurrentTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_removeActionNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_initWithDictionary(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_addActionNode(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_getUnitTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_isPlaying(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_updateToFrameByTime(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_setLoop(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_simulationActionUpdate(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionObject_ActionObject(JSContext *cx, uint32_t argc, jsval *vp);

extern JSClass  *jsb_ActionManager_class;
extern JSObject *jsb_ActionManager_prototype;

JSBool js_cocos2dx_studio_ActionManager_constructor(JSContext *cx, uint32_t argc, jsval *vp);
void js_cocos2dx_studio_ActionManager_finalize(JSContext *cx, JSObject *obj);
void js_register_cocos2dx_studio_ActionManager(JSContext *cx, JSObject *global);
void register_all_cocos2dx_studio(JSContext* cx, JSObject* obj);
JSBool js_cocos2dx_studio_ActionManager_playActionByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionManager_getActionByName(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionManager_releaseActions(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionManager_purgeActionManager(JSContext *cx, uint32_t argc, jsval *vp);
JSBool js_cocos2dx_studio_ActionManager_shareManager(JSContext *cx, uint32_t argc, jsval *vp);
#endif


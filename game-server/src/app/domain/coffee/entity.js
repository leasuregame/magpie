// Generated by CoffeeScript 1.6.3
(function () {
    var Entity, EventEmitter, exports, id, setAttr, _,
        __hasProp = {}.hasOwnProperty,
        __extends = function (child, parent) {
            for (var key in parent) {
                if (__hasProp.call(parent, key)) child[key] = parent[key];
            }
            function ctor() {
                this.constructor = child;
            }

            ctor.prototype = parent.prototype;
            child.prototype = new ctor();
            child.__super__ = parent.prototype;
            return child;
        };

    EventEmitter = require('events').EventEmitter;

    _ = require('underscore');

    id = 1;

    Entity = (function (_super) {
        __extends(Entity, _super);

        function Entity(opts) {
            this.entityId = id++;
            if (opts) {
                setAttr(this, opts);
            }
            if (typeof this.init === "function") {
                this.init.apply(this, arguments);
            }
        }

        Entity.prototype.getEntityId = function () {
            return this.entityId;
        };

        Entity.prototype.sets = function (attrs) {
            return setAttr(this, attrs);
        };

        Entity.prototype.set = function (name, value) {
            return setAttr(this, name, value);
        };

        Entity.prototype.get = function (name) {
            return setAttr(this, name);
        };

        Entity.prototype.increase = function (name, val) {
            if (val == null) {
                val = 1;
            }
            return this.set(name, this.get(name) + val);
        };

        Entity.prototype.decrease = function (name, val) {
            if (val == null) {
                val = 1;
            }
            return this.set(name, this.get(nme) - val);
        };

        Entity.prototype.save = function () {
            return this.emit('save', this);
        };

        return Entity;

    })(EventEmitter);

    setAttr = function (self, name, value) {
        var attrs, k, v;
        if (arguments.length === 3) {
            self[name] = value;
            return this;
        }
        if (arguments.length === 2) {
            if (_.isObject(name)) {
                attrs = name;
                if (attrs.id) {
                    self.id = attrs.id;
                }
                for (k in attrs) {
                    v = attrs[k];
                    if (attrs.hasOwnProperty(k) && typeof self[k] === 'function') {
                        self[k](v);
                    } else {
                        self[k] = v;
                    }
                }
                return this;
            } else {
                return self[name];
            }
        }
    };

    exports = module.exports = Entity;

}).call(this);

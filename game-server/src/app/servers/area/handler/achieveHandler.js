// Generated by CoffeeScript 1.6.2
var Handler, playerManager, table, utility, _;

playerManager = require('pomelo').app.get('playerManager');

table = require('../../../manager/table');

utility = require('../../../common/utility');

_ = require('underscore');

module.exports = function(app) {
  return new Handler(app);
};

Handler = function(app) {
  this.app = app;
};

Handler.prototype.achievements = function(msg, session, next) {
  var playerId;

  playerId = session.get('playerId');
  return playerManager.getPlayerInfo({
    pid: playerId
  }, function(err, player) {
    var k, results, v, _ref;

    if (err) {
      return next(null, {
        code: err.code || 500,
        msg: err.msg || err
      });
    }
    results = {};
    _ref = player.achievement;
    for (k in _ref) {
      v = _ref[k];
      results[k] = {
        isAchieve: v.isAchieve,
        isTake: v.isTake,
        got: v.got
      };
    }
    return next(null, {
      code: 200,
      msg: results
    });
  });
};

Handler.prototype.getReward = function(msg, session, next) {
  var achId, playerId;

  playerId = session.get('playerId');
  achId = msg.id;
  return playerManager.getPlayerInfo({
    pid: playerId
  }, function(err, player) {
    var ach, data;

    if (err) {
      return next(null, {
        code: err.code || 500,
        msg: err.msg || err
      });
    }
    data = table.getTableItem('achievement', achId);
    if (!data) {
      return next(null, {
        code: 501,
        msg: '找不到对应的成就'
      });
    }
    ach = utility.deepCopy(player.achievement);
    if (!_.has(ach, achId) || !ach[achId].isAchieve) {
      return next(null, {
        code: 501,
        msg: '还未达成该成就'
      });
    }
    if (_.has(ach, achId) && ach[achId].isTake) {
      return next(null, {
        code: 501,
        msg: '不能重复领取'
      });
    }
    ach[achId].isTake = true;
    player.achievement = ach;
    player.increase('energy', data.energy);
    player.increase('gold', data.gold);
    player.save();
    return next(null, {
      code: 200
    });
  });
};

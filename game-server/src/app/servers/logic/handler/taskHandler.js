// Generated by CoffeeScript 1.6.3
(function() {
  var Handler, async, playerManager, resources, taskManager;

  playerManager = require('../../../manager/playerManager');

  taskManager = require('../../../manager/taskManager');

  resources = require('../../../../shared/resources');

  async = require('async');

  module.exports = function(app) {
    return new Handler(app);
  };

  Handler = function(app) {
    this.app = app;
  };

  Handler.prototype.explore = function(msg, session, next) {
    var addBattleLogIfFight, checkFight, data, executeExpolore, getPlayer, player, playerId,
      _this = this;
    playerId = session.get('playerId');
    data = null;
    player = null;
    getPlayer = function(cb) {
      return playerManager.getPlayer({
        pid: playerId
      }, cb);
    };
    executeExpolore = function(player, cb) {
      return taskManager.explore(player, cb);
    };
    checkFight = function(_player, taskId, data, cb) {
      player = _player;
      data = data;
      if (data.result === 'fight') {
        return _this.app.rpc.battle.fightRemote.pve(session, {
          pid: player.id,
          taskId: taskId
        }, cb);
      } else {
        return cb(null, null);
      }
    };
    addBattleLogIfFight = function(bl, cb) {
      if (bl != null) {
        data.battle_log = bl;
      }
      return cb(null);
    };
    return async.waterfall([getPlayer, executeExpolore, checkFight, addBattleLogIfFight], function(err) {
      if (err) {
        next(err, {
          code: 500
        });
        return;
      }
      player.save();
      return next(null, {
        code: 200,
        data: data
      });
    });
  };

}).call(this);

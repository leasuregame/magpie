// Generated by CoffeeScript 1.6.2
var Module, PropertyBase, utility, _ref,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Module = require('../common/module');

utility = require('../common/utility');

PropertyBase = (function(_super) {
  __extends(PropertyBase, _super);

  function PropertyBase() {
    _ref = PropertyBase.__super__.constructor.apply(this, arguments);
    return _ref;
  }

  PropertyBase.prototype._able = false;

  PropertyBase.prototype.enable = function() {};

  PropertyBase.prototype.disable = function() {};

  PropertyBase.prototype.execute = function() {};

  PropertyBase.prototype.check = function() {
    if (this.skill.rate != null) {
      return utility.hitRate(this.skill.rate);
    } else {
      return true;
    }
  };

  PropertyBase.prototype.activate = function(targets, skill) {
    if (!this._able) {
      this.targets = targets;
      this.skill = skill;
      this.enable(targets, skill);
      return this._able = true;
    }
  };

  PropertyBase.prototype.inactivate = function() {
    if (this._able) {
      this.disable();
      return this._able = false;
    }
  };

  PropertyBase.prototype.changeValue = function(raw) {
    var base_val, lv_grow, _ref1;

    _ref1 = utility.parseEffect(this.skill['star' + this.skill.hero.skill_lv]), base_val = _ref1[0], lv_grow = _ref1[1];
    return parseInt(raw * (base_val + lv_grow * (this.skill.hero.skill_lv - 1)) / 100);
  };

  return PropertyBase;

})(Module);

module.exports = PropertyBase;

// Generated by CoffeeScript 1.6.2
'Battle log steps 格式:\n  [攻击方]:[承受方,一个或多个]:[技能]:[技能产生的效果]';
var BattleLog, exports;

BattleLog = (function() {
  function BattleLog() {
    this.result = {};
    this.steps = [];
    this.print = [];
  }

  BattleLog.prototype.set = function(key, value) {
    return this.result[key] = value;
  };

  BattleLog.prototype.setWinner = function(winner) {
    return this.set('winner', winner);
  };

  BattleLog.prototype.addPrint = function(atker, dfder, hero, enemys) {
    var emy, ids, _i, _len,
      _this = this;

    ids = enemys.map(function(e) {
      return e.id;
    });
    this.print.push("玩家" + atker.id + "的英雄" + hero.id + " =攻击=》玩家" + dfder.id + "的英雄" + ids + ", " + hero.skill + ":" + hero.effects);
    this.print.push(" -- 攻击方：英雄" + hero.id + "剩余血量: " + hero.hp + ", 攻击伤害：" + hero.atk);
    for (_i = 0, _len = enemys.length; _i < _len; _i++) {
      emy = enemys[_i];
      this.print.push(" -- 承受方：英雄" + emy.id + "剩余血量: " + emy.hp + ", 攻击伤害：" + emy.atk);
    }
    enemys.forEach(function(e) {
      if (e.death()) {
        return _this.print.push("英雄" + e.id + " 被 英雄" + hero.id + " 杀死");
      }
    });
    if (dfder.death()) {
      return this.print.push("玩家" + dfder.id + " 被 玩家" + atker.id + " 击败");
    }
  };

  BattleLog.prototype.addStep = function(step) {
    return this.steps.push(step);
  };

  BattleLog.prototype.reports = function() {
    this.set('steps', this.steps);
    return this.result;
  };

  BattleLog.prototype.clear = function() {
    this.result = {};
    this.steps = [];
    return this.print = [];
  };

  return BattleLog;

})();

exports = module.exports = new BattleLog();

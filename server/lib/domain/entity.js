// Generated by CoffeeScript 1.6.2
var Entity, EventEmitter, exports, id, util, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

util = require('util');

_ = require('underscore');

id = 1;

Entity = (function(_super) {
  __extends(Entity, _super);

  function Entity(opts) {
    this._attributes = {};
    this.entityId = id++;
    if (opts.attributes != null) {
      this._attr(opts.attributes);
    }
    if (typeof this.init === "function") {
      this.init.apply(this, arguments);
    }
  }

  Entity.prototype.getEntityId = function() {
    return this.entityId;
  };

  Entity.prototype.getAttributes = function() {
    return this._attributes;
  };

  Entity.prototype.set = function(name, value) {
    return this._attr(name, value);
  };

  Entity.prototype.get = function(name) {
    return this._attr(name);
  };

  Entity.prototype.increase = function(name, val) {
    return this.set(name, this.get(name) + val);
  };

  Entity.prototype.decrease = function(name, val) {
    return this.set(name, this.get(nme) - val);
  };

  Entity.prototype._attr = function(name, value) {
    var attrs, k, v;

    if (arguments.length === 2) {
      this._attributes[name] = value;
      return this;
    }
    if (arguments.length === 1) {
      if (_.isObject(name)) {
        attrs = name;
        if (attrs.id) {
          this.id = attrs.id;
        }
        for (k in attrs) {
          v = attrs[k];
          if (attrs.hasOwnProperty(k) && typeof this[k] === 'function') {
            this[k](v);
          } else {
            this._attributes[k] = v;
          }
        }
        return this;
      } else {
        return this._attributes[name];
      }
    }
  };

  return Entity;

})(EventEmitter);

exports = module.exports = Entity;

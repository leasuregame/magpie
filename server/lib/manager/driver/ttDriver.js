// Generated by CoffeeScript 1.6.2
var Driver, Memcached, host, mc, port, start_time, _, _key;

Memcached = require('memcached');

_ = require('underscore');

_key = '_b_';

start_time = new Date().getTime();

host = '127.0.0.1';

port = '11211';

mc = new Memcached("" + host + ":" + port);

mc.get(_key, function(err, data) {
  if (!data) {
    mc.add(_key, [start_time], -1, function(err, res) {
      if (err) {
        return console.log(err);
      }
    });
    return;
  }
  if (_.isString(data)) {
    data = JSON.parse(data);
  }
  data.push(start_time);
  return mc.set(_key, data, -1, function(err, res) {
    if (err) {
      return console.log(err);
    }
  });
});

Driver = {
  add: function(key, value, cb) {
    return mc.add(key, value, 0, cb);
  },
  set: function(key, value, cb) {
    return mc.set(key, value, 0, cb);
  },
  get: function(key, cb) {
    return mc.get(key, function(err, data) {
      return cb(err, data);
    });
  },
  getJson: function(key, cb) {
    return mc.get(key, function(err, data) {
      var error;

      try {
        if (_.isString(data)) {
          data = JSON.parse(data);
        }
        return cb(err, data);
      } catch (_error) {
        error = _error;
        return cb(error, data);
      }
    });
  },
  gets: function(keys, cb) {
    return mc.getMulti(keys, function(err, data) {
      return cb(err, data);
    });
  },
  del: function(key, cb) {
    return mc.del(key, function(err, data) {
      return cb(err, data);
    });
  },
  inc: function(key, cb) {
    return mc.inc(key, 1, cb);
  }
};

module.exports = Driver;
